% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialize_in_memory.R
\name{create_ondisc_matrix_from_R_matrix}
\alias{create_ondisc_matrix_from_R_matrix}
\title{Create an \code{ondisc} matrix from an R matrix}
\usage{
create_ondisc_matrix_from_R_matrix(
  r_matrix,
  barcodes,
  features_df,
  odm_fp,
  metadata_fp = NULL
)
}
\arguments{
\item{r_matrix}{an R matrix. The matrix can be represented as a standard (dense) R matrix or a sparse matrix of class "dgTMatrix". Integer and logical (i.e., boolean) matrices are allowed.}

\item{barcodes}{a character vector giving the cell barcodes.}

\item{features_df}{a data frame giving the names of the features. The first column (required) contains the feature IDs (e.g., ENSG00000186092), and the second column (optional) contains the human-readable feature names (e.g., OR4F5). Subsequent columns are discarded. Gene names starting with "MT-" are assumed to be mitochondrial genes and will be used to compute the p_mito covariate.}

\item{odm_fp}{location to write the backing .odm file.}

\item{metadata_fp}{location to write the me metadata .RDS file. By default, a file called "metadata.rds" stored in the same directory as the backing .odm file.}
}
\value{
A \code{covariate_ondisc_matrix} object.
}
\description{
Initializes an \code{ondisc_matrix} from an R matrix. Returns an \code{ondisc_matrix} alongside cell-specific and feature-specific covariate matrices (or optionally, a \code{covariate_ondisc_matrix}).
}
\details{
This function computes the following cell-specific and feature-specific covariates:
\itemize{
\item cell-specific: (i) total number of features expressed in cell (n_nonzero_cell), (ii) total UMI count (n_umis_cell), and (iii) percentage of UMIs that map to mitochondrial genes (p_mito_cell).
\item feature-specific: (i) total number of cells in which feature is expressed (n_nonzero_feature), (ii) mean expression of feature across cells (mean_expression_feature), (iii) coefficient of variation of feature expression across cells (coef_of_variation_feature).
}
}
\examples{
##################
# Define variables
##################
file_locs <- system.file("extdata",package = "ondisc", c("genes.tsv", "cell_barcodes.tsv"))
features_df <- readr::read_tsv(file = file_locs[1], col_types = c("cc"),
col_names = c("id", "name"))
barcodes <- dplyr::pull(readr::read_tsv(file = file_locs[2], col_types = "c", col_names = FALSE))
set.seed(4)
n_col <- length(barcodes)
n_row <- nrow(features_df)
r_matrix <- matrix(data = rpois(n = n_col * n_row, lambda = 0.3),
nrow = n_row, ncol = n_col)
r_matrix_2 <- matrix(data = as.logical(rnbinom(n = n_col * n_row, size = 1, prob = 0.05)),
nrow = n_row, ncol = n_col)
features_df_2 <- dplyr::select(features_df, id)

###########################
# EXAMPLE 1: integer counts
###########################
odm_fp <- paste0(create_new_directory(), "/integer_odm")
odm_integer <- create_ondisc_matrix_from_R_matrix(r_matrix, barcodes,
features_df, odm_fp)

####################
# EXAMPLE 2: logical
####################
odm_fp <- paste0(create_new_directory(), "/logical_odm")
odm_logical <- create_ondisc_matrix_from_R_matrix(r_matrix_2, barcodes,
features_df_2, odm_fp)
}
